/**
  this class represent food for Plant. Fertilizer is generated by herbivore and
  carnivore poop.
**/
class Fertilizer extends WorldObject{
  
//config attributes
  static final float energySizeMultiplicator = 0.01;//used to calcul sizeModifier
  static final int baseWidth = 30;
  static final int baseHeight = 10;
  static final int defaultEnergy = 100;
  
//attributes
  float sizeModifier;
  int energy;
  color fillColor;
  color strokeColor;
  float fertilizingRayon;
  
//constructors 
  Fertilizer(float x, float y, World world){
  //WorldObject attributes
    this.world = world;
    location = new PVector (x , y );
    size = new PVector();
  //Fertilizer attributes
    fillColor = #8B4513;
    strokeColor = 0;
    energy = defaultEnergy;
    updateSize();
    fertilizingRayon = size.x /2;
  }
  
  Fertilizer(float x, float y, World world,int energy){
  //WorldObject attributes
    this.world = world;
    location = new PVector (x , y );
    size = new PVector();
  //Fertilizer attributes
    fillColor = #8B4513;
    strokeColor = 0;
    this.energy = energy;
    updateSize();
    fertilizingRayon = size.x /2;
  }

//inherited methods
  void update(long deltaTime){

    updateSize();
    if(energy <= 0)
      world.removeFertilizer(this);
  }
  
  void render(){
   
    pushMatrix();
    
    fill(fillColor);
    stroke(strokeColor);
    strokeWeight(1);
    ellipse (location.x, location.y, size.x, size.y);
    
    popMatrix();
  }
  
//methods
  int deplete(int amount){

    if(energy >= amount){
      energy -= amount;
      return amount;
    }
    else if(energy > 0){
      int value = energy;
      energy = 0;
      return value;
    }
    return 0;
  }
  
  void updateSize(){
    sizeModifier = (float) energySizeMultiplicator * energy;
    size.set(baseWidth*sizeModifier,baseHeight*sizeModifier);
  }
}